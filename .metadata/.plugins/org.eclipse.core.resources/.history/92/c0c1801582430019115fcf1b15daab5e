
public class BinarySearchTree 
{
	/* Class containing left and right child of current node and key value*/
    class Node { 
        int key; 
        Node left, right; 
  
        public Node(int item) { 
            key = item; 
            left = right = null; 
        } 
    } 
  
    // Root of BST 
    Node root; 
  
    // Constructor 
    BinarySearchTree() {  
        root = null;  
    } 
    

	 // SEARCH FUNCTION 
	 public Node search(Node root, int key) 
	 { 
	     // Base Cases: root is null or key is present at root 
	     if (root==null || root.key==key) 
	         return root; 
	   
	     // val is greater than root's key 
	     if (root.key > key) 
	         return search(root.left, key); 
	   
	     // val is less than root's key 
	     return search(root.right, key); 
	 } 

    

}
